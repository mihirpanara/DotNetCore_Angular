{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nclass FileLikeObject {\n  constructor(fileOrInput) {\n    this.rawFile = fileOrInput;\n    const fakePathOrObject = fileOrInput instanceof HTMLInputElement ? fileOrInput.value : fileOrInput;\n    const postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n    const method = `_createFrom${postfix}`;\n    this[method](fakePathOrObject);\n  }\n\n  _createFromFakePath(path) {\n    this.lastModifiedDate = void 0;\n    this.size = void 0;\n    this.type = `like/${path.slice(path.lastIndexOf('.') + 1).toLowerCase()}`;\n    this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n  }\n\n  _createFromObject(object) {\n    this.size = object.size;\n    this.type = object.type;\n    this.name = object.name;\n  }\n\n}\n\nclass FileItem {\n  constructor(uploader, some, options) {\n    this.url = '/';\n    this.headers = [];\n    this.withCredentials = true;\n    this.formData = [];\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = false;\n    this.isSuccess = false;\n    this.isCancel = false;\n    this.isError = false;\n    this.progress = 0;\n    this.uploader = uploader;\n    this.some = some;\n    this.options = options;\n    this.file = new FileLikeObject(some);\n    this._file = some;\n\n    if (uploader.options) {\n      this.method = uploader.options.method || 'POST';\n      this.alias = uploader.options.itemAlias || 'file';\n    }\n\n    this.url = uploader.options.url;\n  }\n\n  upload() {\n    try {\n      this.uploader.uploadItem(this);\n    } catch (e) {\n      this.uploader._onCompleteItem(this, '', 0, {});\n\n      this.uploader._onErrorItem(this, '', 0, {});\n    }\n  }\n\n  cancel() {\n    this.uploader.cancelItem(this);\n  }\n\n  remove() {\n    this.uploader.removeFromQueue(this);\n  }\n\n  onBeforeUpload() {\n    return void 0;\n  }\n\n  onBuildForm(form) {\n    return {\n      form\n    };\n  }\n\n  onProgress(progress) {\n    return {\n      progress\n    };\n  }\n\n  onSuccess(response, status, headers) {\n    return {\n      response,\n      status,\n      headers\n    };\n  }\n\n  onError(response, status, headers) {\n    return {\n      response,\n      status,\n      headers\n    };\n  }\n\n  onCancel(response, status, headers) {\n    return {\n      response,\n      status,\n      headers\n    };\n  }\n\n  onComplete(response, status, headers) {\n    return {\n      response,\n      status,\n      headers\n    };\n  }\n\n  _onBeforeUpload() {\n    this.isReady = true;\n    this.isUploading = true;\n    this.isUploaded = false;\n    this.isSuccess = false;\n    this.isCancel = false;\n    this.isError = false;\n    this.progress = 0;\n    this.onBeforeUpload();\n  }\n\n  _onBuildForm(form) {\n    this.onBuildForm(form);\n  }\n\n  _onProgress(progress) {\n    this.progress = progress;\n    this.onProgress(progress);\n  }\n\n  _onSuccess(response, status, headers) {\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = true;\n    this.isSuccess = true;\n    this.isCancel = false;\n    this.isError = false;\n    this.progress = 100;\n    this.index = undefined;\n    this.onSuccess(response, status, headers);\n  }\n\n  _onError(response, status, headers) {\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = true;\n    this.isSuccess = false;\n    this.isCancel = false;\n    this.isError = true;\n    this.progress = 0;\n    this.index = undefined;\n    this.onError(response, status, headers);\n  }\n\n  _onCancel(response, status, headers) {\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = false;\n    this.isSuccess = false;\n    this.isCancel = true;\n    this.isError = false;\n    this.progress = 0;\n    this.index = undefined;\n    this.onCancel(response, status, headers);\n  }\n\n  _onComplete(response, status, headers) {\n    this.onComplete(response, status, headers);\n\n    if (this.uploader.options.removeAfterUpload) {\n      this.remove();\n    }\n  }\n\n  _prepareToUploading() {\n    this.index = this.index || ++this.uploader._nextIndex;\n    this.isReady = true;\n  }\n\n}\n\nclass FileType {\n  /*  MS office  */\n  // tslint:disable-next-line:variable-name\n  static #_ = this.mime_doc = ['application/msword', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.openxmlformats-officedocument.wordprocessingml.template', 'application/vnd.ms-word.document.macroEnabled.12', 'application/vnd.ms-word.template.macroEnabled.12']; // tslint:disable-next-line:variable-name\n\n  static #_2 = this.mime_xsl = ['application/vnd.ms-excel', 'application/vnd.ms-excel', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.openxmlformats-officedocument.spreadsheetml.template', 'application/vnd.ms-excel.sheet.macroEnabled.12', 'application/vnd.ms-excel.template.macroEnabled.12', 'application/vnd.ms-excel.addin.macroEnabled.12', 'application/vnd.ms-excel.sheet.binary.macroEnabled.12']; // tslint:disable-next-line:variable-name\n\n  static #_3 = this.mime_ppt = ['application/vnd.ms-powerpoint', 'application/vnd.ms-powerpoint', 'application/vnd.ms-powerpoint', 'application/vnd.ms-powerpoint', 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'application/vnd.openxmlformats-officedocument.presentationml.template', 'application/vnd.openxmlformats-officedocument.presentationml.slideshow', 'application/vnd.ms-powerpoint.addin.macroEnabled.12', 'application/vnd.ms-powerpoint.presentation.macroEnabled.12', 'application/vnd.ms-powerpoint.presentation.macroEnabled.12', 'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'];\n  /* PSD */\n  // tslint:disable-next-line:variable-name\n\n  static #_4 = this.mime_psd = ['image/photoshop', 'image/x-photoshop', 'image/psd', 'application/photoshop', 'application/psd', 'zz-application/zz-winassoc-psd'];\n  /* Compressed files */\n  // tslint:disable-next-line:variable-name\n\n  static #_5 = this.mime_compress = ['application/x-gtar', 'application/x-gcompress', 'application/compress', 'application/x-tar', 'application/x-rar-compressed', 'application/octet-stream', 'application/x-zip-compressed', 'application/zip-compressed', 'application/x-7z-compressed', 'application/gzip', 'application/x-bzip2'];\n\n  static getMimeClass(file) {\n    let mimeClass = 'application';\n\n    if (file?.type && this.mime_psd.indexOf(file.type) !== -1) {\n      mimeClass = 'image';\n    } else if (file?.type?.match('image.*')) {\n      mimeClass = 'image';\n    } else if (file?.type?.match('video.*')) {\n      mimeClass = 'video';\n    } else if (file?.type?.match('audio.*')) {\n      mimeClass = 'audio';\n    } else if (file?.type === 'application/pdf') {\n      mimeClass = 'pdf';\n    } else if (file?.type && this.mime_compress.indexOf(file.type) !== -1) {\n      mimeClass = 'compress';\n    } else if (file?.type && this.mime_doc.indexOf(file.type) !== -1) {\n      mimeClass = 'doc';\n    } else if (file?.type && this.mime_xsl.indexOf(file.type) !== -1) {\n      mimeClass = 'xls';\n    } else if (file?.type && this.mime_ppt.indexOf(file.type) !== -1) {\n      mimeClass = 'ppt';\n    }\n\n    if (mimeClass === 'application' && file?.name) {\n      mimeClass = this.fileTypeDetection(file.name);\n    }\n\n    return mimeClass;\n  }\n\n  static fileTypeDetection(inputFilename) {\n    const types = {\n      jpg: 'image',\n      jpeg: 'image',\n      tif: 'image',\n      psd: 'image',\n      bmp: 'image',\n      png: 'image',\n      nef: 'image',\n      tiff: 'image',\n      cr2: 'image',\n      dwg: 'image',\n      cdr: 'image',\n      ai: 'image',\n      indd: 'image',\n      pin: 'image',\n      cdp: 'image',\n      skp: 'image',\n      stp: 'image',\n      '3dm': 'image',\n      mp3: 'audio',\n      wav: 'audio',\n      wma: 'audio',\n      mod: 'audio',\n      m4a: 'audio',\n      compress: 'compress',\n      zip: 'compress',\n      rar: 'compress',\n      '7z': 'compress',\n      lz: 'compress',\n      z01: 'compress',\n      bz2: 'compress',\n      gz: 'compress',\n      pdf: 'pdf',\n      xls: 'xls',\n      xlsx: 'xls',\n      ods: 'xls',\n      mp4: 'video',\n      avi: 'video',\n      wmv: 'video',\n      mpg: 'video',\n      mts: 'video',\n      flv: 'video',\n      '3gp': 'video',\n      vob: 'video',\n      m4v: 'video',\n      mpeg: 'video',\n      m2ts: 'video',\n      mov: 'video',\n      doc: 'doc',\n      docx: 'doc',\n      eps: 'doc',\n      txt: 'doc',\n      odt: 'doc',\n      rtf: 'doc',\n      ppt: 'ppt',\n      pptx: 'ppt',\n      pps: 'ppt',\n      ppsx: 'ppt',\n      odp: 'ppt'\n    };\n    const chunks = inputFilename.split('.');\n\n    if (chunks.length < 2) {\n      return 'application';\n    }\n\n    const extension = chunks[chunks.length - 1].toLowerCase();\n\n    if (types[extension] === undefined) {\n      return 'application';\n    } else {\n      return types[extension];\n    }\n  }\n\n}\n\nfunction isFile(value) {\n  return File && value instanceof File;\n}\n\nclass FileUploader {\n  constructor(options) {\n    this.isUploading = false;\n    this.queue = [];\n    this.progress = 0;\n    this._nextIndex = 0;\n    this.options = {\n      autoUpload: false,\n      isHTML5: true,\n      filters: [],\n      removeAfterUpload: false,\n      disableMultipart: false,\n      formatDataFunction: item => item._file,\n      formatDataFunctionIsAsync: false,\n      url: ''\n    };\n    this.setOptions(options);\n    this.response = new EventEmitter();\n  }\n\n  setOptions(options) {\n    this.options = Object.assign(this.options, options);\n    this.authToken = this.options.authToken;\n    this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\n    this.autoUpload = this.options.autoUpload;\n    this.options.filters?.unshift({\n      name: 'queueLimit',\n      fn: this._queueLimitFilter\n    });\n\n    if (this.options.maxFileSize) {\n      this.options.filters?.unshift({\n        name: 'fileSize',\n        fn: this._fileSizeFilter\n      });\n    }\n\n    if (this.options.allowedFileType) {\n      this.options.filters?.unshift({\n        name: 'fileType',\n        fn: this._fileTypeFilter\n      });\n    }\n\n    if (this.options.allowedMimeType) {\n      this.options.filters?.unshift({\n        name: 'mimeType',\n        fn: this._mimeTypeFilter\n      });\n    }\n\n    for (let i = 0; i < this.queue.length; i++) {\n      this.queue[i].url = this.options.url;\n    }\n  }\n\n  addToQueue(files, _options, filters) {\n    let options = _options;\n    const list = [];\n\n    for (const file of files) {\n      list.push(file);\n    }\n\n    const arrayOfFilters = this._getFilters(filters);\n\n    const count = this.queue.length;\n    const addedFileItems = [];\n    list.map(some => {\n      if (!options) {\n        options = this.options;\n      }\n\n      const temp = new FileLikeObject(some);\n\n      if (this._isValidFile(temp, arrayOfFilters, options)) {\n        const fileItem = new FileItem(this, some, options);\n        addedFileItems.push(fileItem);\n        this.queue.push(fileItem);\n\n        this._onAfterAddingFile(fileItem);\n      } else {\n        if (typeof this._failFilterIndex === 'number' && this._failFilterIndex >= 0) {\n          const filter = arrayOfFilters[this._failFilterIndex];\n\n          this._onWhenAddingFileFailed(temp, filter, options);\n        }\n      }\n    });\n\n    if (this.queue.length !== count) {\n      this._onAfterAddingAll(addedFileItems);\n\n      this.progress = this._getTotalProgress();\n    }\n\n    this._render();\n\n    if (this.options.autoUpload) {\n      this.uploadAll();\n    }\n  }\n\n  removeFromQueue(value) {\n    const index = this.getIndexOfItem(value);\n    const item = this.queue[index];\n\n    if (item.isUploading) {\n      item.cancel();\n    }\n\n    this.queue.splice(index, 1);\n    this.progress = this._getTotalProgress();\n  }\n\n  clearQueue() {\n    while (this.queue.length) {\n      this.queue[0].remove();\n    }\n\n    this.progress = 0;\n  }\n\n  uploadItem(value) {\n    const index = this.getIndexOfItem(value);\n    const item = this.queue[index];\n    const transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n\n    item._prepareToUploading();\n\n    if (this.isUploading) {\n      return;\n    }\n\n    this.isUploading = true;\n    this[transport](item);\n  }\n\n  cancelItem(value) {\n    const index = this.getIndexOfItem(value);\n    const item = this.queue[index];\n    const prop = this.options.isHTML5 ? item._xhr : item._form;\n\n    if (item && item.isUploading) {\n      prop.abort();\n    }\n  }\n\n  uploadAll() {\n    const items = this.getNotUploadedItems().filter(item => !item.isUploading);\n\n    if (!items.length) {\n      return;\n    }\n\n    items.map(item => item._prepareToUploading());\n    items[0].upload();\n  }\n\n  cancelAll() {\n    const items = this.getNotUploadedItems();\n    items.map(item => item.cancel());\n  }\n\n  isFile(value) {\n    return isFile(value);\n  }\n\n  isFileLikeObject(value) {\n    return value instanceof FileLikeObject;\n  }\n\n  getIndexOfItem(value) {\n    return typeof value === 'number' ? value : this.queue.indexOf(value);\n  }\n\n  getNotUploadedItems() {\n    return this.queue.filter(item => !item.isUploaded);\n  }\n\n  getReadyItems() {\n    return this.queue.filter(item => item.isReady && !item.isUploading).sort((item1, item2) => item1.index - item2.index);\n  }\n\n  onAfterAddingAll(fileItems) {\n    return {\n      fileItems\n    };\n  }\n\n  onBuildItemForm(fileItem, form) {\n    return {\n      fileItem,\n      form\n    };\n  }\n\n  onAfterAddingFile(fileItem) {\n    return {\n      fileItem\n    };\n  }\n\n  onWhenAddingFileFailed(item, filter, options) {\n    return {\n      item,\n      filter,\n      options\n    };\n  }\n\n  onBeforeUploadItem(fileItem) {\n    return {\n      fileItem\n    };\n  }\n\n  onProgressItem(fileItem, progress) {\n    return {\n      fileItem,\n      progress\n    };\n  }\n\n  onProgressAll(progress) {\n    return {\n      progress\n    };\n  }\n\n  onSuccessItem(item, response, status, headers) {\n    return {\n      item,\n      response,\n      status,\n      headers\n    };\n  }\n\n  onErrorItem(item, response, status, headers) {\n    return {\n      item,\n      response,\n      status,\n      headers\n    };\n  }\n\n  onCancelItem(item, response, status, headers) {\n    return {\n      item,\n      response,\n      status,\n      headers\n    };\n  }\n\n  onCompleteItem(item, response, status, headers) {\n    return {\n      item,\n      response,\n      status,\n      headers\n    };\n  }\n\n  onCompleteAll() {\n    return void 0;\n  }\n\n  _mimeTypeFilter(item) {\n    return !(item?.type && this.options.allowedMimeType && this.options.allowedMimeType?.indexOf(item.type) === -1);\n  }\n\n  _fileSizeFilter(item) {\n    return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\n  }\n\n  _fileTypeFilter(item) {\n    return !(this.options.allowedFileType && this.options.allowedFileType.indexOf(FileType.getMimeClass(item)) === -1);\n  }\n\n  _onErrorItem(item, response, status, headers) {\n    item._onError(response, status, headers);\n\n    this.onErrorItem(item, response, status, headers);\n  }\n\n  _onCompleteItem(item, response, status, headers) {\n    item._onComplete(response, status, headers);\n\n    this.onCompleteItem(item, response, status, headers);\n    const nextItem = this.getReadyItems()[0];\n    this.isUploading = false;\n\n    if (nextItem) {\n      nextItem.upload();\n      return;\n    }\n\n    this.onCompleteAll();\n    this.progress = this._getTotalProgress();\n\n    this._render();\n  }\n\n  _headersGetter(parsedHeaders) {\n    return name => {\n      if (name) {\n        return parsedHeaders[name.toLowerCase()] || undefined;\n      }\n\n      return parsedHeaders;\n    };\n  }\n\n  _xhrTransport(item) {\n    // tslint:disable-next-line:no-this-assignment\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const that = this;\n    const xhr = item._xhr = new XMLHttpRequest();\n    let sendable;\n\n    this._onBeforeUploadItem(item);\n\n    if (typeof item._file.size !== 'number') {\n      throw new TypeError('The file specified is no longer valid');\n    }\n\n    if (!this.options.disableMultipart) {\n      sendable = new FormData();\n\n      this._onBuildItemForm(item, sendable);\n\n      const appendFile = () => sendable.append(item.alias, item._file, item.file.name);\n\n      if (!this.options.parametersBeforeFiles) {\n        appendFile();\n      } // For AWS, Additional Parameters must come BEFORE Files\n\n\n      if (this.options.additionalParameter !== undefined) {\n        Object.keys(this.options.additionalParameter).forEach(key => {\n          let paramVal = this.options.additionalParameter?.[key]; // Allow an additional parameter to include the filename\n\n          if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0 && item.file?.name) {\n            paramVal = paramVal.replace('{{file_name}}', item.file.name);\n          }\n\n          sendable.append(key, paramVal);\n        });\n      }\n\n      if (appendFile && this.options.parametersBeforeFiles) {\n        appendFile();\n      }\n    } else {\n      if (this.options.formatDataFunction) {\n        sendable = this.options.formatDataFunction(item);\n      }\n    }\n\n    xhr.upload.onprogress = event => {\n      const progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n\n      this._onProgressItem(item, progress);\n    };\n\n    xhr.onload = () => {\n      const headers = this._parseHeaders(xhr.getAllResponseHeaders());\n\n      const response = this._transformResponse(xhr.response);\n\n      const gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n      const method = `_on${gist}Item`;\n      this[method](item, response, xhr.status, headers);\n\n      this._onCompleteItem(item, response, xhr.status, headers);\n    };\n\n    xhr.onerror = () => {\n      const headers = this._parseHeaders(xhr.getAllResponseHeaders());\n\n      const response = this._transformResponse(xhr.response);\n\n      this._onErrorItem(item, response, xhr.status, headers);\n\n      this._onCompleteItem(item, response, xhr.status, headers);\n    };\n\n    xhr.onabort = () => {\n      const headers = this._parseHeaders(xhr.getAllResponseHeaders());\n\n      const response = this._transformResponse(xhr.response);\n\n      this._onCancelItem(item, response, xhr.status, headers);\n\n      this._onCompleteItem(item, response, xhr.status, headers);\n    };\n\n    if (item.method && item.url) {\n      xhr.open(item.method, item.url, true);\n    }\n\n    xhr.withCredentials = item.withCredentials;\n\n    if (this.options.headers) {\n      for (const header of this.options.headers) {\n        xhr.setRequestHeader(header.name, header.value);\n      }\n    }\n\n    if (item.headers.length) {\n      for (const header of item.headers) {\n        xhr.setRequestHeader(header.name, header.value);\n      }\n    }\n\n    if (this.authToken && this.authTokenHeader) {\n      xhr.setRequestHeader(this.authTokenHeader, this.authToken);\n    }\n\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState == XMLHttpRequest.DONE) {\n        that.response.emit(xhr.responseText);\n      }\n    };\n\n    if (this.options.formatDataFunctionIsAsync) {\n      sendable.then(result => xhr.send(JSON.stringify(result)));\n    } else {\n      xhr.send(sendable);\n    }\n\n    this._render();\n  }\n\n  _getTotalProgress(value = 0) {\n    if (this.options.removeAfterUpload) {\n      return value;\n    }\n\n    const notUploaded = this.getNotUploadedItems().length;\n    const uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n    const ratio = 100 / this.queue.length;\n    const current = value * ratio / 100;\n    return Math.round(uploaded * ratio + current);\n  }\n\n  _getFilters(filters) {\n    if (!filters) {\n      return this.options?.filters || [];\n    }\n\n    if (Array.isArray(filters)) {\n      return filters;\n    }\n\n    if (typeof filters === 'string') {\n      const names = filters.match(/[^\\s,]+/g);\n      return this.options?.filters || [].filter(filter => names?.indexOf(filter.name) !== -1);\n    }\n\n    return this.options?.filters || [];\n  }\n\n  _render() {\n    return void 0;\n  }\n\n  _queueLimitFilter() {\n    return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\n  }\n\n  _isValidFile(file, filters, options) {\n    this._failFilterIndex = -1;\n    return !filters.length ? true : filters.every(filter => {\n      if (typeof this._failFilterIndex === 'number') {\n        this._failFilterIndex++;\n      }\n\n      return filter.fn.call(this, file, options);\n    });\n  }\n\n  _isSuccessCode(status) {\n    return status >= 200 && status < 300 || status === 304;\n  }\n\n  _transformResponse(response) {\n    return response;\n  }\n\n  _parseHeaders(headers) {\n    const parsed = {};\n    let key;\n    let val;\n    let i;\n\n    if (!headers) {\n      return parsed;\n    }\n\n    headers.split('\\n').map(line => {\n      i = line.indexOf(':');\n      key = line.slice(0, i).trim().toLowerCase();\n      val = line.slice(i + 1).trim();\n\n      if (key) {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    });\n    return parsed;\n  }\n\n  _onWhenAddingFileFailed(item, filter, options) {\n    this.onWhenAddingFileFailed(item, filter, options);\n  }\n\n  _onAfterAddingFile(item) {\n    this.onAfterAddingFile(item);\n  }\n\n  _onAfterAddingAll(items) {\n    this.onAfterAddingAll(items);\n  }\n\n  _onBeforeUploadItem(item) {\n    item._onBeforeUpload();\n\n    this.onBeforeUploadItem(item);\n  }\n\n  _onBuildItemForm(item, form) {\n    item._onBuildForm(form);\n\n    this.onBuildItemForm(item, form);\n  }\n\n  _onProgressItem(item, progress) {\n    const total = this._getTotalProgress(progress);\n\n    this.progress = total;\n\n    item._onProgress(progress);\n\n    this.onProgressItem(item, progress);\n    this.onProgressAll(total);\n\n    this._render();\n  }\n\n  _onSuccessItem(item, response, status, headers) {\n    item._onSuccess(response, status, headers);\n\n    this.onSuccessItem(item, response, status, headers);\n  }\n\n  _onCancelItem(item, response, status, headers) {\n    item._onCancel(response, status, headers);\n\n    this.onCancelItem(item, response, status, headers);\n  }\n\n}\n\nclass FileDropDirective {\n  constructor(element) {\n    this.fileOver = new EventEmitter(); // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n\n    this.onFileDrop = new EventEmitter();\n    this.element = element;\n  }\n\n  getOptions() {\n    return this.uploader?.options;\n  }\n\n  getFilters() {\n    return '';\n  }\n\n  onDrop(event) {\n    const transfer = this._getTransfer(event);\n\n    if (!transfer) {\n      return;\n    }\n\n    const options = this.getOptions();\n    const filters = this.getFilters();\n\n    this._preventAndStop(event);\n\n    if (options) {\n      this.uploader?.addToQueue(transfer.files, options, filters);\n    }\n\n    this.fileOver.emit(false);\n    this.onFileDrop.emit(transfer.files);\n  }\n\n  onDragOver(event) {\n    const transfer = this._getTransfer(event);\n\n    if (!this._haveFiles(transfer.types)) {\n      return;\n    }\n\n    transfer.dropEffect = 'copy';\n\n    this._preventAndStop(event);\n\n    this.fileOver.emit(true);\n  }\n\n  onDragLeave(event) {\n    if (this.element) {\n      if (event.currentTarget === this.element[0]) {\n        return;\n      }\n    }\n\n    this._preventAndStop(event);\n\n    this.fileOver.emit(false);\n  }\n\n  _getTransfer(event) {\n    return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n  }\n\n  _preventAndStop(event) {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  _haveFiles(types) {\n    if (!types) {\n      return false;\n    }\n\n    if (types.indexOf) {\n      return types.indexOf('Files') !== -1;\n    } else if (types.contains) {\n      return types.contains('Files');\n    } else {\n      return false;\n    }\n  }\n\n  static #_ = this.ɵfac = function FileDropDirective_Factory(t) {\n    return new (t || FileDropDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: FileDropDirective,\n    selectors: [[\"\", \"ng2FileDrop\", \"\"]],\n    hostBindings: function FileDropDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"drop\", function FileDropDirective_drop_HostBindingHandler($event) {\n          return ctx.onDrop($event);\n        })(\"dragover\", function FileDropDirective_dragover_HostBindingHandler($event) {\n          return ctx.onDragOver($event);\n        })(\"dragleave\", function FileDropDirective_dragleave_HostBindingHandler($event) {\n          return ctx.onDragLeave($event);\n        });\n      }\n    },\n    inputs: {\n      uploader: \"uploader\"\n    },\n    outputs: {\n      fileOver: \"fileOver\",\n      onFileDrop: \"onFileDrop\"\n    }\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FileDropDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ng2FileDrop]'\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }], {\n    uploader: [{\n      type: Input\n    }],\n    fileOver: [{\n      type: Output\n    }],\n    onFileDrop: [{\n      type: Output\n    }],\n    onDrop: [{\n      type: HostListener,\n      args: ['drop', ['$event']]\n    }],\n    onDragOver: [{\n      type: HostListener,\n      args: ['dragover', ['$event']]\n    }],\n    onDragLeave: [{\n      type: HostListener,\n      args: ['dragleave', ['$event']]\n    }]\n  });\n})();\n\nclass FileSelectDirective {\n  constructor(element) {\n    // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n    this.onFileSelected = new EventEmitter();\n    this.element = element;\n  }\n\n  getOptions() {\n    return this.uploader?.options;\n  }\n\n  getFilters() {\n    return '';\n  }\n\n  isEmptyAfterSelection() {\n    return !!this.element.nativeElement.attributes.multiple;\n  }\n\n  onChange() {\n    const files = this.element.nativeElement.files;\n    const options = this.getOptions();\n    const filters = this.getFilters();\n    this.uploader?.addToQueue(files, options, filters);\n    this.onFileSelected.emit(files);\n\n    if (this.isEmptyAfterSelection()) {\n      this.element.nativeElement.value = '';\n    }\n  }\n\n  static #_ = this.ɵfac = function FileSelectDirective_Factory(t) {\n    return new (t || FileSelectDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: FileSelectDirective,\n    selectors: [[\"\", \"ng2FileSelect\", \"\"]],\n    hostBindings: function FileSelectDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"change\", function FileSelectDirective_change_HostBindingHandler() {\n          return ctx.onChange();\n        });\n      }\n    },\n    inputs: {\n      uploader: \"uploader\"\n    },\n    outputs: {\n      onFileSelected: \"onFileSelected\"\n    }\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FileSelectDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ng2FileSelect]'\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }], {\n    uploader: [{\n      type: Input\n    }],\n    onFileSelected: [{\n      type: Output\n    }],\n    onChange: [{\n      type: HostListener,\n      args: ['change']\n    }]\n  });\n})();\n\nclass FileUploadModule {\n  static #_ = this.ɵfac = function FileUploadModule_Factory(t) {\n    return new (t || FileUploadModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: FileUploadModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FileUploadModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [FileDropDirective, FileSelectDirective],\n      exports: [FileDropDirective, FileSelectDirective]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { FileDropDirective, FileItem, FileLikeObject, FileSelectDirective, FileUploadModule, FileUploader };","map":{"version":3,"names":["i0","EventEmitter","Directive","Input","Output","HostListener","NgModule","CommonModule","FileLikeObject","constructor","fileOrInput","rawFile","fakePathOrObject","HTMLInputElement","value","postfix","method","_createFromFakePath","path","lastModifiedDate","size","type","slice","lastIndexOf","toLowerCase","name","_createFromObject","object","FileItem","uploader","some","options","url","headers","withCredentials","formData","isReady","isUploading","isUploaded","isSuccess","isCancel","isError","progress","file","_file","alias","itemAlias","upload","uploadItem","e","_onCompleteItem","_onErrorItem","cancel","cancelItem","remove","removeFromQueue","onBeforeUpload","onBuildForm","form","onProgress","onSuccess","response","status","onError","onCancel","onComplete","_onBeforeUpload","_onBuildForm","_onProgress","_onSuccess","index","undefined","_onError","_onCancel","_onComplete","removeAfterUpload","_prepareToUploading","_nextIndex","FileType","mime_doc","mime_xsl","mime_ppt","mime_psd","mime_compress","getMimeClass","mimeClass","indexOf","match","fileTypeDetection","inputFilename","types","jpg","jpeg","tif","psd","bmp","png","nef","tiff","cr2","dwg","cdr","ai","indd","pin","cdp","skp","stp","mp3","wav","wma","mod","m4a","compress","zip","rar","lz","z01","bz2","gz","pdf","xls","xlsx","ods","mp4","avi","wmv","mpg","mts","flv","vob","m4v","mpeg","m2ts","mov","doc","docx","eps","txt","odt","rtf","ppt","pptx","pps","ppsx","odp","chunks","split","length","extension","isFile","File","FileUploader","queue","autoUpload","isHTML5","filters","disableMultipart","formatDataFunction","item","formatDataFunctionIsAsync","setOptions","Object","assign","authToken","authTokenHeader","unshift","fn","_queueLimitFilter","maxFileSize","_fileSizeFilter","allowedFileType","_fileTypeFilter","allowedMimeType","_mimeTypeFilter","i","addToQueue","files","_options","list","push","arrayOfFilters","_getFilters","count","addedFileItems","map","temp","_isValidFile","fileItem","_onAfterAddingFile","_failFilterIndex","filter","_onWhenAddingFileFailed","_onAfterAddingAll","_getTotalProgress","_render","uploadAll","getIndexOfItem","splice","clearQueue","transport","prop","_xhr","_form","abort","items","getNotUploadedItems","cancelAll","isFileLikeObject","getReadyItems","sort","item1","item2","onAfterAddingAll","fileItems","onBuildItemForm","onAfterAddingFile","onWhenAddingFileFailed","onBeforeUploadItem","onProgressItem","onProgressAll","onSuccessItem","onErrorItem","onCancelItem","onCompleteItem","onCompleteAll","nextItem","_headersGetter","parsedHeaders","_xhrTransport","that","xhr","XMLHttpRequest","sendable","_onBeforeUploadItem","TypeError","FormData","_onBuildItemForm","appendFile","append","parametersBeforeFiles","additionalParameter","keys","forEach","key","paramVal","replace","onprogress","event","Math","round","lengthComputable","loaded","total","_onProgressItem","onload","_parseHeaders","getAllResponseHeaders","_transformResponse","gist","_isSuccessCode","onerror","onabort","_onCancelItem","open","header","setRequestHeader","onreadystatechange","readyState","DONE","emit","responseText","then","result","send","JSON","stringify","notUploaded","uploaded","ratio","current","Array","isArray","names","queueLimit","every","call","parsed","val","line","trim","_onSuccessItem","FileDropDirective","element","fileOver","onFileDrop","getOptions","getFilters","onDrop","transfer","_getTransfer","_preventAndStop","onDragOver","_haveFiles","dropEffect","onDragLeave","currentTarget","dataTransfer","originalEvent","preventDefault","stopPropagation","contains","ɵfac","ElementRef","ɵdir","args","selector","FileSelectDirective","onFileSelected","isEmptyAfterSelection","nativeElement","attributes","multiple","onChange","FileUploadModule","ɵmod","ɵinj","imports","declarations","exports"],"sources":["D:/Mihir/Git/DotNetCore_Angular/DatingApp/client/node_modules/ng2-file-upload/fesm2022/ng2-file-upload.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nclass FileLikeObject {\n    constructor(fileOrInput) {\n        this.rawFile = fileOrInput;\n        const fakePathOrObject = fileOrInput instanceof HTMLInputElement ? fileOrInput.value : fileOrInput;\n        const postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n        const method = `_createFrom${postfix}`;\n        this[method](fakePathOrObject);\n    }\n    _createFromFakePath(path) {\n        this.lastModifiedDate = void 0;\n        this.size = void 0;\n        this.type = `like/${path.slice(path.lastIndexOf('.') + 1).toLowerCase()}`;\n        this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n    }\n    _createFromObject(object) {\n        this.size = object.size;\n        this.type = object.type;\n        this.name = object.name;\n    }\n}\n\nclass FileItem {\n    constructor(uploader, some, options) {\n        this.url = '/';\n        this.headers = [];\n        this.withCredentials = true;\n        this.formData = [];\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.uploader = uploader;\n        this.some = some;\n        this.options = options;\n        this.file = new FileLikeObject(some);\n        this._file = some;\n        if (uploader.options) {\n            this.method = uploader.options.method || 'POST';\n            this.alias = uploader.options.itemAlias || 'file';\n        }\n        this.url = uploader.options.url;\n    }\n    upload() {\n        try {\n            this.uploader.uploadItem(this);\n        }\n        catch (e) {\n            this.uploader._onCompleteItem(this, '', 0, {});\n            this.uploader._onErrorItem(this, '', 0, {});\n        }\n    }\n    cancel() {\n        this.uploader.cancelItem(this);\n    }\n    remove() {\n        this.uploader.removeFromQueue(this);\n    }\n    onBeforeUpload() {\n        return void 0;\n    }\n    onBuildForm(form) {\n        return { form };\n    }\n    onProgress(progress) {\n        return { progress };\n    }\n    onSuccess(response, status, headers) {\n        return { response, status, headers };\n    }\n    onError(response, status, headers) {\n        return { response, status, headers };\n    }\n    onCancel(response, status, headers) {\n        return { response, status, headers };\n    }\n    onComplete(response, status, headers) {\n        return { response, status, headers };\n    }\n    _onBeforeUpload() {\n        this.isReady = true;\n        this.isUploading = true;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.onBeforeUpload();\n    }\n    _onBuildForm(form) {\n        this.onBuildForm(form);\n    }\n    _onProgress(progress) {\n        this.progress = progress;\n        this.onProgress(progress);\n    }\n    _onSuccess(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = true;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 100;\n        this.index = undefined;\n        this.onSuccess(response, status, headers);\n    }\n    _onError(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = true;\n        this.progress = 0;\n        this.index = undefined;\n        this.onError(response, status, headers);\n    }\n    _onCancel(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = true;\n        this.isError = false;\n        this.progress = 0;\n        this.index = undefined;\n        this.onCancel(response, status, headers);\n    }\n    _onComplete(response, status, headers) {\n        this.onComplete(response, status, headers);\n        if (this.uploader.options.removeAfterUpload) {\n            this.remove();\n        }\n    }\n    _prepareToUploading() {\n        this.index = this.index || ++this.uploader._nextIndex;\n        this.isReady = true;\n    }\n}\n\nclass FileType {\n    /*  MS office  */\n    // tslint:disable-next-line:variable-name\n    static { this.mime_doc = [\n        'application/msword',\n        'application/msword',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n        'application/vnd.ms-word.document.macroEnabled.12',\n        'application/vnd.ms-word.template.macroEnabled.12'\n    ]; }\n    // tslint:disable-next-line:variable-name\n    static { this.mime_xsl = [\n        'application/vnd.ms-excel',\n        'application/vnd.ms-excel',\n        'application/vnd.ms-excel',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n        'application/vnd.ms-excel.sheet.macroEnabled.12',\n        'application/vnd.ms-excel.template.macroEnabled.12',\n        'application/vnd.ms-excel.addin.macroEnabled.12',\n        'application/vnd.ms-excel.sheet.binary.macroEnabled.12'\n    ]; }\n    // tslint:disable-next-line:variable-name\n    static { this.mime_ppt = [\n        'application/vnd.ms-powerpoint',\n        'application/vnd.ms-powerpoint',\n        'application/vnd.ms-powerpoint',\n        'application/vnd.ms-powerpoint',\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n        'application/vnd.openxmlformats-officedocument.presentationml.template',\n        'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n        'application/vnd.ms-powerpoint.addin.macroEnabled.12',\n        'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n        'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n        'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'\n    ]; }\n    /* PSD */\n    // tslint:disable-next-line:variable-name\n    static { this.mime_psd = [\n        'image/photoshop',\n        'image/x-photoshop',\n        'image/psd',\n        'application/photoshop',\n        'application/psd',\n        'zz-application/zz-winassoc-psd'\n    ]; }\n    /* Compressed files */\n    // tslint:disable-next-line:variable-name\n    static { this.mime_compress = [\n        'application/x-gtar',\n        'application/x-gcompress',\n        'application/compress',\n        'application/x-tar',\n        'application/x-rar-compressed',\n        'application/octet-stream',\n        'application/x-zip-compressed',\n        'application/zip-compressed',\n        'application/x-7z-compressed',\n        'application/gzip',\n        'application/x-bzip2'\n    ]; }\n    static getMimeClass(file) {\n        let mimeClass = 'application';\n        if (file?.type && this.mime_psd.indexOf(file.type) !== -1) {\n            mimeClass = 'image';\n        }\n        else if (file?.type?.match('image.*')) {\n            mimeClass = 'image';\n        }\n        else if (file?.type?.match('video.*')) {\n            mimeClass = 'video';\n        }\n        else if (file?.type?.match('audio.*')) {\n            mimeClass = 'audio';\n        }\n        else if (file?.type === 'application/pdf') {\n            mimeClass = 'pdf';\n        }\n        else if (file?.type && this.mime_compress.indexOf(file.type) !== -1) {\n            mimeClass = 'compress';\n        }\n        else if (file?.type && this.mime_doc.indexOf(file.type) !== -1) {\n            mimeClass = 'doc';\n        }\n        else if (file?.type && this.mime_xsl.indexOf(file.type) !== -1) {\n            mimeClass = 'xls';\n        }\n        else if (file?.type && this.mime_ppt.indexOf(file.type) !== -1) {\n            mimeClass = 'ppt';\n        }\n        if (mimeClass === 'application' && file?.name) {\n            mimeClass = this.fileTypeDetection(file.name);\n        }\n        return mimeClass;\n    }\n    static fileTypeDetection(inputFilename) {\n        const types = {\n            jpg: 'image',\n            jpeg: 'image',\n            tif: 'image',\n            psd: 'image',\n            bmp: 'image',\n            png: 'image',\n            nef: 'image',\n            tiff: 'image',\n            cr2: 'image',\n            dwg: 'image',\n            cdr: 'image',\n            ai: 'image',\n            indd: 'image',\n            pin: 'image',\n            cdp: 'image',\n            skp: 'image',\n            stp: 'image',\n            '3dm': 'image',\n            mp3: 'audio',\n            wav: 'audio',\n            wma: 'audio',\n            mod: 'audio',\n            m4a: 'audio',\n            compress: 'compress',\n            zip: 'compress',\n            rar: 'compress',\n            '7z': 'compress',\n            lz: 'compress',\n            z01: 'compress',\n            bz2: 'compress',\n            gz: 'compress',\n            pdf: 'pdf',\n            xls: 'xls',\n            xlsx: 'xls',\n            ods: 'xls',\n            mp4: 'video',\n            avi: 'video',\n            wmv: 'video',\n            mpg: 'video',\n            mts: 'video',\n            flv: 'video',\n            '3gp': 'video',\n            vob: 'video',\n            m4v: 'video',\n            mpeg: 'video',\n            m2ts: 'video',\n            mov: 'video',\n            doc: 'doc',\n            docx: 'doc',\n            eps: 'doc',\n            txt: 'doc',\n            odt: 'doc',\n            rtf: 'doc',\n            ppt: 'ppt',\n            pptx: 'ppt',\n            pps: 'ppt',\n            ppsx: 'ppt',\n            odp: 'ppt'\n        };\n        const chunks = inputFilename.split('.');\n        if (chunks.length < 2) {\n            return 'application';\n        }\n        const extension = chunks[chunks.length - 1].toLowerCase();\n        if (types[extension] === undefined) {\n            return 'application';\n        }\n        else {\n            return types[extension];\n        }\n    }\n}\n\nfunction isFile(value) {\n    return (File && value instanceof File);\n}\nclass FileUploader {\n    constructor(options) {\n        this.isUploading = false;\n        this.queue = [];\n        this.progress = 0;\n        this._nextIndex = 0;\n        this.options = {\n            autoUpload: false,\n            isHTML5: true,\n            filters: [],\n            removeAfterUpload: false,\n            disableMultipart: false,\n            formatDataFunction: (item) => item._file,\n            formatDataFunctionIsAsync: false,\n            url: ''\n        };\n        this.setOptions(options);\n        this.response = new EventEmitter();\n    }\n    setOptions(options) {\n        this.options = Object.assign(this.options, options);\n        this.authToken = this.options.authToken;\n        this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\n        this.autoUpload = this.options.autoUpload;\n        this.options.filters?.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\n        if (this.options.maxFileSize) {\n            this.options.filters?.unshift({ name: 'fileSize', fn: this._fileSizeFilter });\n        }\n        if (this.options.allowedFileType) {\n            this.options.filters?.unshift({ name: 'fileType', fn: this._fileTypeFilter });\n        }\n        if (this.options.allowedMimeType) {\n            this.options.filters?.unshift({ name: 'mimeType', fn: this._mimeTypeFilter });\n        }\n        for (let i = 0; i < this.queue.length; i++) {\n            this.queue[i].url = this.options.url;\n        }\n    }\n    addToQueue(files, _options, filters) {\n        let options = _options;\n        const list = [];\n        for (const file of files) {\n            list.push(file);\n        }\n        const arrayOfFilters = this._getFilters(filters);\n        const count = this.queue.length;\n        const addedFileItems = [];\n        list.map((some) => {\n            if (!options) {\n                options = this.options;\n            }\n            const temp = new FileLikeObject(some);\n            if (this._isValidFile(temp, arrayOfFilters, options)) {\n                const fileItem = new FileItem(this, some, options);\n                addedFileItems.push(fileItem);\n                this.queue.push(fileItem);\n                this._onAfterAddingFile(fileItem);\n            }\n            else {\n                if (typeof this._failFilterIndex === 'number' && this._failFilterIndex >= 0) {\n                    const filter = arrayOfFilters[this._failFilterIndex];\n                    this._onWhenAddingFileFailed(temp, filter, options);\n                }\n            }\n        });\n        if (this.queue.length !== count) {\n            this._onAfterAddingAll(addedFileItems);\n            this.progress = this._getTotalProgress();\n        }\n        this._render();\n        if (this.options.autoUpload) {\n            this.uploadAll();\n        }\n    }\n    removeFromQueue(value) {\n        const index = this.getIndexOfItem(value);\n        const item = this.queue[index];\n        if (item.isUploading) {\n            item.cancel();\n        }\n        this.queue.splice(index, 1);\n        this.progress = this._getTotalProgress();\n    }\n    clearQueue() {\n        while (this.queue.length) {\n            this.queue[0].remove();\n        }\n        this.progress = 0;\n    }\n    uploadItem(value) {\n        const index = this.getIndexOfItem(value);\n        const item = this.queue[index];\n        const transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n        item._prepareToUploading();\n        if (this.isUploading) {\n            return;\n        }\n        this.isUploading = true;\n        this[transport](item);\n    }\n    cancelItem(value) {\n        const index = this.getIndexOfItem(value);\n        const item = this.queue[index];\n        const prop = this.options.isHTML5 ? item._xhr : item._form;\n        if (item && item.isUploading) {\n            prop.abort();\n        }\n    }\n    uploadAll() {\n        const items = this.getNotUploadedItems().filter((item) => !item.isUploading);\n        if (!items.length) {\n            return;\n        }\n        items.map((item) => item._prepareToUploading());\n        items[0].upload();\n    }\n    cancelAll() {\n        const items = this.getNotUploadedItems();\n        items.map((item) => item.cancel());\n    }\n    isFile(value) {\n        return isFile(value);\n    }\n    isFileLikeObject(value) {\n        return value instanceof FileLikeObject;\n    }\n    getIndexOfItem(value) {\n        return typeof value === 'number' ? value : this.queue.indexOf(value);\n    }\n    getNotUploadedItems() {\n        return this.queue.filter((item) => !item.isUploaded);\n    }\n    getReadyItems() {\n        return this.queue\n            .filter((item) => (item.isReady && !item.isUploading))\n            .sort((item1, item2) => item1.index - item2.index);\n    }\n    onAfterAddingAll(fileItems) {\n        return { fileItems };\n    }\n    onBuildItemForm(fileItem, form) {\n        return { fileItem, form };\n    }\n    onAfterAddingFile(fileItem) {\n        return { fileItem };\n    }\n    onWhenAddingFileFailed(item, filter, options) {\n        return { item, filter, options };\n    }\n    onBeforeUploadItem(fileItem) {\n        return { fileItem };\n    }\n    onProgressItem(fileItem, progress) {\n        return { fileItem, progress };\n    }\n    onProgressAll(progress) {\n        return { progress };\n    }\n    onSuccessItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    onErrorItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    onCancelItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    onCompleteItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    onCompleteAll() {\n        return void 0;\n    }\n    _mimeTypeFilter(item) {\n        return !(item?.type && this.options.allowedMimeType && this.options.allowedMimeType?.indexOf(item.type) === -1);\n    }\n    _fileSizeFilter(item) {\n        return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\n    }\n    _fileTypeFilter(item) {\n        return !(this.options.allowedFileType &&\n            this.options.allowedFileType.indexOf(FileType.getMimeClass(item)) === -1);\n    }\n    _onErrorItem(item, response, status, headers) {\n        item._onError(response, status, headers);\n        this.onErrorItem(item, response, status, headers);\n    }\n    _onCompleteItem(item, response, status, headers) {\n        item._onComplete(response, status, headers);\n        this.onCompleteItem(item, response, status, headers);\n        const nextItem = this.getReadyItems()[0];\n        this.isUploading = false;\n        if (nextItem) {\n            nextItem.upload();\n            return;\n        }\n        this.onCompleteAll();\n        this.progress = this._getTotalProgress();\n        this._render();\n    }\n    _headersGetter(parsedHeaders) {\n        return (name) => {\n            if (name) {\n                return parsedHeaders[name.toLowerCase()] || undefined;\n            }\n            return parsedHeaders;\n        };\n    }\n    _xhrTransport(item) {\n        // tslint:disable-next-line:no-this-assignment\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        const xhr = item._xhr = new XMLHttpRequest();\n        let sendable;\n        this._onBeforeUploadItem(item);\n        if (typeof item._file.size !== 'number') {\n            throw new TypeError('The file specified is no longer valid');\n        }\n        if (!this.options.disableMultipart) {\n            sendable = new FormData();\n            this._onBuildItemForm(item, sendable);\n            const appendFile = () => sendable.append(item.alias, item._file, item.file.name);\n            if (!this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n            // For AWS, Additional Parameters must come BEFORE Files\n            if (this.options.additionalParameter !== undefined) {\n                Object.keys(this.options.additionalParameter).forEach((key) => {\n                    let paramVal = this.options.additionalParameter?.[key];\n                    // Allow an additional parameter to include the filename\n                    if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0 && item.file?.name) {\n                        paramVal = paramVal.replace('{{file_name}}', item.file.name);\n                    }\n                    sendable.append(key, paramVal);\n                });\n            }\n            if (appendFile && this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n        }\n        else {\n            if (this.options.formatDataFunction) {\n                sendable = this.options.formatDataFunction(item);\n            }\n        }\n        xhr.upload.onprogress = (event) => {\n            const progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n            this._onProgressItem(item, progress);\n        };\n        xhr.onload = () => {\n            const headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            const response = this._transformResponse(xhr.response);\n            const gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n            const method = `_on${gist}Item`;\n            this[method](item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        };\n        xhr.onerror = () => {\n            const headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            const response = this._transformResponse(xhr.response);\n            this._onErrorItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        };\n        xhr.onabort = () => {\n            const headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            const response = this._transformResponse(xhr.response);\n            this._onCancelItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        };\n        if (item.method && item.url) {\n            xhr.open(item.method, item.url, true);\n        }\n        xhr.withCredentials = item.withCredentials;\n        if (this.options.headers) {\n            for (const header of this.options.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (item.headers.length) {\n            for (const header of item.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (this.authToken && this.authTokenHeader) {\n            xhr.setRequestHeader(this.authTokenHeader, this.authToken);\n        }\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                that.response.emit(xhr.responseText);\n            }\n        };\n        if (this.options.formatDataFunctionIsAsync) {\n            sendable.then((result) => xhr.send(JSON.stringify(result)));\n        }\n        else {\n            xhr.send(sendable);\n        }\n        this._render();\n    }\n    _getTotalProgress(value = 0) {\n        if (this.options.removeAfterUpload) {\n            return value;\n        }\n        const notUploaded = this.getNotUploadedItems().length;\n        const uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n        const ratio = 100 / this.queue.length;\n        const current = value * ratio / 100;\n        return Math.round(uploaded * ratio + current);\n    }\n    _getFilters(filters) {\n        if (!filters) {\n            return this.options?.filters || [];\n        }\n        if (Array.isArray(filters)) {\n            return filters;\n        }\n        if (typeof filters === 'string') {\n            const names = filters.match(/[^\\s,]+/g);\n            return this.options?.filters || []\n                .filter((filter) => names?.indexOf(filter.name) !== -1);\n        }\n        return this.options?.filters || [];\n    }\n    _render() {\n        return void 0;\n    }\n    _queueLimitFilter() {\n        return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\n    }\n    _isValidFile(file, filters, options) {\n        this._failFilterIndex = -1;\n        return !filters.length ? true : filters.every((filter) => {\n            if (typeof this._failFilterIndex === 'number') {\n                this._failFilterIndex++;\n            }\n            return filter.fn.call(this, file, options);\n        });\n    }\n    _isSuccessCode(status) {\n        return (status >= 200 && status < 300) || status === 304;\n    }\n    _transformResponse(response) {\n        return response;\n    }\n    _parseHeaders(headers) {\n        const parsed = {};\n        let key;\n        let val;\n        let i;\n        if (!headers) {\n            return parsed;\n        }\n        headers.split('\\n').map((line) => {\n            i = line.indexOf(':');\n            key = line.slice(0, i).trim().toLowerCase();\n            val = line.slice(i + 1).trim();\n            if (key) {\n                parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n            }\n        });\n        return parsed;\n    }\n    _onWhenAddingFileFailed(item, filter, options) {\n        this.onWhenAddingFileFailed(item, filter, options);\n    }\n    _onAfterAddingFile(item) {\n        this.onAfterAddingFile(item);\n    }\n    _onAfterAddingAll(items) {\n        this.onAfterAddingAll(items);\n    }\n    _onBeforeUploadItem(item) {\n        item._onBeforeUpload();\n        this.onBeforeUploadItem(item);\n    }\n    _onBuildItemForm(item, form) {\n        item._onBuildForm(form);\n        this.onBuildItemForm(item, form);\n    }\n    _onProgressItem(item, progress) {\n        const total = this._getTotalProgress(progress);\n        this.progress = total;\n        item._onProgress(progress);\n        this.onProgressItem(item, progress);\n        this.onProgressAll(total);\n        this._render();\n    }\n    _onSuccessItem(item, response, status, headers) {\n        item._onSuccess(response, status, headers);\n        this.onSuccessItem(item, response, status, headers);\n    }\n    _onCancelItem(item, response, status, headers) {\n        item._onCancel(response, status, headers);\n        this.onCancelItem(item, response, status, headers);\n    }\n}\n\nclass FileDropDirective {\n    constructor(element) {\n        this.fileOver = new EventEmitter();\n        // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n        this.onFileDrop = new EventEmitter();\n        this.element = element;\n    }\n    getOptions() {\n        return this.uploader?.options;\n    }\n    getFilters() {\n        return '';\n    }\n    onDrop(event) {\n        const transfer = this._getTransfer(event);\n        if (!transfer) {\n            return;\n        }\n        const options = this.getOptions();\n        const filters = this.getFilters();\n        this._preventAndStop(event);\n        if (options) {\n            this.uploader?.addToQueue(transfer.files, options, filters);\n        }\n        this.fileOver.emit(false);\n        this.onFileDrop.emit(transfer.files);\n    }\n    onDragOver(event) {\n        const transfer = this._getTransfer(event);\n        if (!this._haveFiles(transfer.types)) {\n            return;\n        }\n        transfer.dropEffect = 'copy';\n        this._preventAndStop(event);\n        this.fileOver.emit(true);\n    }\n    onDragLeave(event) {\n        if (this.element) {\n            if (event.currentTarget === this.element[0]) {\n                return;\n            }\n        }\n        this._preventAndStop(event);\n        this.fileOver.emit(false);\n    }\n    _getTransfer(event) {\n        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n    }\n    _preventAndStop(event) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    _haveFiles(types) {\n        if (!types) {\n            return false;\n        }\n        if (types.indexOf) {\n            return types.indexOf('Files') !== -1;\n        }\n        else if (types.contains) {\n            return types.contains('Files');\n        }\n        else {\n            return false;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.1\", ngImport: i0, type: FileDropDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.1\", type: FileDropDirective, selector: \"[ng2FileDrop]\", inputs: { uploader: \"uploader\" }, outputs: { fileOver: \"fileOver\", onFileDrop: \"onFileDrop\" }, host: { listeners: { \"drop\": \"onDrop($event)\", \"dragover\": \"onDragOver($event)\", \"dragleave\": \"onDragLeave($event)\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.1\", ngImport: i0, type: FileDropDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ng2FileDrop]' }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }], propDecorators: { uploader: [{\n                type: Input\n            }], fileOver: [{\n                type: Output\n            }], onFileDrop: [{\n                type: Output\n            }], onDrop: [{\n                type: HostListener,\n                args: ['drop', ['$event']]\n            }], onDragOver: [{\n                type: HostListener,\n                args: ['dragover', ['$event']]\n            }], onDragLeave: [{\n                type: HostListener,\n                args: ['dragleave', ['$event']]\n            }] } });\n\nclass FileSelectDirective {\n    constructor(element) {\n        // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n        this.onFileSelected = new EventEmitter();\n        this.element = element;\n    }\n    getOptions() {\n        return this.uploader?.options;\n    }\n    getFilters() {\n        return '';\n    }\n    isEmptyAfterSelection() {\n        return !!this.element.nativeElement.attributes.multiple;\n    }\n    onChange() {\n        const files = this.element.nativeElement.files;\n        const options = this.getOptions();\n        const filters = this.getFilters();\n        this.uploader?.addToQueue(files, options, filters);\n        this.onFileSelected.emit(files);\n        if (this.isEmptyAfterSelection()) {\n            this.element.nativeElement.value = '';\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.1\", ngImport: i0, type: FileSelectDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.0.1\", type: FileSelectDirective, selector: \"[ng2FileSelect]\", inputs: { uploader: \"uploader\" }, outputs: { onFileSelected: \"onFileSelected\" }, host: { listeners: { \"change\": \"onChange()\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.1\", ngImport: i0, type: FileSelectDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ng2FileSelect]' }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }], propDecorators: { uploader: [{\n                type: Input\n            }], onFileSelected: [{\n                type: Output\n            }], onChange: [{\n                type: HostListener,\n                args: ['change']\n            }] } });\n\nclass FileUploadModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.1\", ngImport: i0, type: FileUploadModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.1\", ngImport: i0, type: FileUploadModule, declarations: [FileDropDirective, FileSelectDirective], imports: [CommonModule], exports: [FileDropDirective, FileSelectDirective] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.1\", ngImport: i0, type: FileUploadModule, imports: [CommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.1\", ngImport: i0, type: FileUploadModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [FileDropDirective, FileSelectDirective],\n                    exports: [FileDropDirective, FileSelectDirective]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FileDropDirective, FileItem, FileLikeObject, FileSelectDirective, FileUploadModule, FileUploader };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}